.width-800px
  =image_tag 'templeman.jpg', width: '900'
 %br/
  %p
    Living documentation for The University of Kent's Library technology roadmap.
  %br/

  .container.width-800px
    .content.width-800px
      = render partial: 'home/home_tab_nav'

      #my-tab-content.tab-content.width-800px

        #introduction-tab.tab-pane.active
          %br/
          As part of its ongoing development of the University of Kent's online library facilities and its
          library technology roadmap, the
          Templeman Library has been examining the
          HE landscape together with Kent-specific drivers for change.
          %br/
          %br/
          The ongoing results of this work, undertaken in conjunction with library and
          educational consultants
          %a{href: 'http://www.kenchadconsulting.com/'}
            Ken Chad
          and
          %a{href: 'http://hedtek.com'}
            Mark van Harmelen,
          are documented here.
          %br/
          %br/
          This is a living archive whose contents are being developed co-operatively  within the
          University and by the consultants.

          %br/
          %br/
          Commenting on the developing contents is a particularly easy way to get your opinion heard.
          %br/
          %br/
          You do need to
          = link_to 'register', new_user_registration_path
          and then
          = link_to 'sign in', new_user_session_path
          to comment or change content.
          %br/
          %br/
          Alternately, you can
          = link_to 'sign in', new_user_session_path
          using an existing Twitter account.

        #theme-tab.tab-pane
          %br/
          The following are broad themes, guides and other cross-cutting information.
          %br/
          %br/
          - pgs = Page.all.collect{|p| p.has_page_type?('Theme') ? p : nil}.compact
          - if pgs != []
            %ul
              - pgs.sort{|p, q| p.title <=> q.title}.each do |pg|
                %li= link_to pg.title, pg
          -else
            No items yet

        #context-tab.tab-pane
          - pgs = Page.all.collect{|p| p.has_page_type?('Context') ? p : nil}.compact
          - if pgs != []
            %ul
              - pgs.sort{|p, q| p.title <=> q.title}.each do |pg|
                %li= link_to pg.title, pg
          -else
            No items yet

        #issue-tab.tab-pane
          - pgs = Page.all.collect{|p| p.has_page_type?('Issue') ? p : nil}.compact
          - if pgs != []
            %ul
              - pgs.sort{|p, q| p.title <=> q.title}.each do |pg|
                %li= link_to pg.title, pg
          -else
            No items yet

        #need-tab.tab-pane
          - pgs = Page.all.collect{|p| p.has_page_type?('Need') ? p : nil}.compact
          - if pgs != []
            %ul
              - pgs.sort{|p, q| p.title <=> q.title}.each do |pg|
                %li= link_to pg.title, pg
          -else
            No items yet

        #competition-tab.tab-pane
          %br/
          External competition in respect of library resources and function offer opportunities for change.
          %br/
          %br/
          For example, by co-opting the external competition to add to library resources and functionality.
          %br/
          %br/
          - pgs = Page.all.collect{|p| p.has_page_type?('Competition') ? p : nil}.compact
          - if pgs != []
            %ul
              - pgs.sort{|p, q| p.title <=> q.title}.each do |pg|
                %li= link_to pg.title, pg
          -else
            No items yet

        #capability-tab.tab-pane
          - pgs = Page.all.collect{|p| p.has_page_type?('Capability') ? p : nil}.compact
          - if pgs != []
            %ul
              - pgs.sort{|p, q| p.title <=> q.title}.each do |pg|
                %li= link_to pg.title, pg
          -else
            No items yet

        #action-tab.tab-pane
          %br
          Actions for the future, either broad-sweep or (to be) expressed in the library technology roadmap.
          %br/
          %br/
          - pgs = Page.all.collect{|p| p.has_page_type?('Action') ? p : nil}.compact
          - if pgs != []
            %ul
              - pgs.sort{|p, q| p.title <=> q.title}.each do |pg|
                %li= link_to pg.title, pg
          -else
            No items yet

