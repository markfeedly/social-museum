git status
git add .
git commit -m "Updating versions"
got push
git fetch
git rebase origin/update-mail
git push

class CollectionItemsController < ApplicationController
  respond_to :html

  expose(:collection_item, attributes: :collection_item_params, finder: :find_by_slug)
  expose(:collection_items)
  expose(:paginated_collection_items) { collection_items.page(params[:page]).per(10)}
  expose(:collection_item_states) do
    Kaminari.paginate_array(collection_item.load_versions).page(params[:page_ci]).per(10)
  end

  authorize_actions_for CollectionItem

  def show
    respond_with(collection_item)
  end

  def new
    collection_item.build_title
    respond_with(collection_item)
  end

  def create
    clean_parameters
    collection_item.logged_user_id = current_user.id
    collection_item.save
    respond_with(collection_item)
  end

  def edit
    respond_with(collection_item)
  end

  def update
    #clean_parameters
    #if need_to_update?
      collection_item.logged_user_id = current_user.id
      collection_item.update_attributes(collection_item_params)
    #end
    respond_with(collection_item)
  end

  def index
    respond_with(collection_items)
  end

  def destroy
    collection_item.destroy
    respond_with(collection_item)
  end

  def subscribe
    collection_item.subscribe(current_user)
    redirect_to collection_item_path(collection_item)
  end

  def unsubscribe
    collection_item.unsubscribe(current_user)
    redirect_to collection_item_path(collection_item)
  end

  private

  def clean_parameters
    ci = params['collection_item']
    ci['title_attributes']['title'].strip!
    ci['description'].strip!
    ci['item_number'].strip!
    ci['location'].strip!
    ci['categories'] = clean_categories_or_tags(ci['categories'])
    ci['tags'] = clean_categories_or_tags(ci['tags'])

  end

  def clean_categories_or_tags(str)
    str.strip.split(',').collect{|t| t.strip}.sort.join(', ')
  end

  def need_to_update?
    old = CollectionItem.find_by_slug(params[:id])
    new = params['collection_item']
    new['title_attributes']['title'] != old.title ||
      new['description'] != old.description ||
      new['item_number'] != old.item_number ||
      new['location']    != old.location ||
      new['categories']  != old.categories ||
      new['tags']        != old.tags
  end

  def collection_item_params
    params.require(:collection_item).permit(:categories,
                                            :description,
                                            :item_number,
                                            :location,
                                            :lock_version,
                                            :tags,
                                            title_attributes: [:title, :id])
  end
end
